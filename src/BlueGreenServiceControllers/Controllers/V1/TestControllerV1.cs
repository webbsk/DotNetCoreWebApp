//----------------------------------------------------------------
// <copyright company="Microsoft Corporation">
//     Copyright (c) Microsoft Corporation.  All rights reserved.
// </copyright>
//----------------------------------------------------------------

using System;
using System.Net;
using System.Threading.Tasks;
using System.Web.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.MarketplaceServices.ReferenceServiceContracts.V1;
using Microsoft.MarketplaceServices.ReferenceServiceExceptions;
using Microsoft.MarketplaceServicesCore.Core;
using Microsoft.MarketplaceServicesCore.Core.Counters;

namespace Microsoft.MarketplaceServices.ReferenceServiceControllers.V1
{
    /// <summary>
    /// Defines operations for the test controller.
    /// </summary>
    [Route("v1.0")]
    public sealed class TestControllerV1 : ApiController
    {
        readonly ICounterFactory counterfactory;
        readonly ReferenceServiceExceptionProvider exceptionProvider;

        /// <summary>
        /// Creates the default entity controller.
        /// </summary>
        /// <param name="counterfactory">Counterfactory to use.</param>
        /// <param name="exceptionProvider">Error Provider.</param>
        public TestControllerV1(
            ICounterFactory counterfactory,
            ReferenceServiceExceptionProvider exceptionProvider)
        {
            this.counterfactory = counterfactory ?? throw new ArgumentNullException(nameof(counterfactory));
            this.exceptionProvider = exceptionProvider ?? throw new ArgumentNullException(nameof(exceptionProvider));
        }

        /// <summary>
        /// Retrieves a specific response based on the query parameters.
        /// </summary>
        /// <group>Test V1</group>
        /// <verb>GET</verb>
        /// <url>http://localhost/test/</url>
        /// <header name="MS-CV" type="string" required="false">The caller's correlation vector.</header>
        /// <responseType><see cref="TestContractV1"/></responseType>
        ///
        /// <returns>Task resulting in the test contract</returns>
        [Route("test")]
        public async Task<TestContractV1> GetAsync (
            [FromQuery(Name = "httpStatusCode")] HttpStatusCode httpStatusCode = HttpStatusCode.OK,
            [FromQuery(Name = "delayInMs")] int delayInMs = 0,
            [FromQuery(Name = "isAutomaticallyRetried")] bool isAutomaticallyRetried = false)
        {
            if (delayInMs > 0)
            {
                // add a delay for the specified milliseconds
                await Task.Delay(delayInMs).OnAnyContext();
            }

            int code = (int)httpStatusCode;
            if (code < 200 || code >= 300)
            {
                // if its not a success status code, throw an error
                var serviceError = new ServiceError(
                    code: "Test",
                    message: "Error generated by Test controller.")
                {
                    Source = this.exceptionProvider.Source
                };

                throw this.exceptionProvider.ToException(httpStatusCode, serviceError);
            }

            var testEntity = new TestContractV1
            {
                HttpStatusCode = httpStatusCode,
                DelayInMilliseconds = delayInMs,
                IsAutomaticallyRetried = isAutomaticallyRetried
            };

            return testEntity;
        }
    }
}